function CINDI_2_tg_dSCD_output_format(auto,version, species,data_path,missing_1st_elev,data_source)
if nargin == 1
    if auto == 0
        %%%% input %%%%
        version = 'v2';
        species ='NO2_460nm';
        %data_path = 'C:\SCIATRAN2\TRACEGAS_RETRIEVAL_v-1-2\Campaign\Retrieval_settings_A\CINDI2\20160914_2\general\';
        %data_path = 'C:\SCIATRAN2\TRACEGAS_RETRIEVAL_v-1-2\Campaign\Retrieval_settings_A\20160914\general\';
        %data_path = 'C:\SCIATRAN2\TRACEGAS_RETRIEVAL_v-1-2\Campaign\Retrieval_settings_A\20160912\general\';
        %data_path = 'C:\SCIATRAN2\TRACEGAS_RETRIEVAL_v-1-2\Campaign\Retrieval_settings_A\20160914\general\'
%         data_path = 'C:\SCIATRAN2\TRACEGAS_RETRIEVAL_v-1-2\Campaign\Retrieval_settings_A\CINDI2\no_offset\20160914\general\';
        file_nm = 'meas_20160914.dat';
        time_stamp = file_nm(1,6:13);
        save_fig = 1;
        DATE_lable = [ file_nm(1,6:13) ' CINDI-2: NO_2 SCD @ 460'];
        missing_1st_elev = 0; % this is for the days when we have 1st 1 degree elev measurements missing!
    elseif auto == 1
        disp('Warning: mising version, species, and data path info! ');
    end
elseif nargin ~= 6
    disp('Warning: mising version, species, and data path info! ');
else
    
    %file_nm = ['meas_' data_path(end-13:end-6) '.dat'];
    file_nm = ['meas_' data_path(end-8:end-1) '.dat'];
    time_stamp = file_nm(1,6:13);
    data_path = [data_path 'general/'];
    save_fig = 1;
    DATE_lable = [ file_nm(1,6:13) ' CINDI-2: ' species(1:3) ' OD @ ' species(5:end)];
end

cd(data_path);
data = importfile(file_nm);

% remove reference 90 deg data (dscd field is 0)
TF = data.NO2meas == 0; 
data(TF,:) = [];

%elev = data.elev(1:9) - 0.5; % elevation angles
%data(1:8,:) = []; % only for Sept 15, the 1 degree measuremnt was missing, so we delete the first 15 min sequence
% elev = data.elev(1:9); % elevation angles
% meas = [elev,reshape(data.NO2meas,9,[])]; % measurements
% err = [elev,reshape(data.err_NO2meas,9,[])]; % measurements error
% model = [elev,reshape(data.NO2retr,9,[])]; % modeled dSCDs

if missing_1st_elev == 1
    pleace_holder = -9999;
    dummy_time_stamp = [time_stamp(7:8) '/' time_stamp(5:6) '/' time_stamp(1:4)];
    data_dummy_line = {dummy_time_stamp,'06:00:00',pleace_holder,1,pleace_holder,pleace_holder,pleace_holder,pleace_holder,pleace_holder};
    data = [data_dummy_line;data];
end

elev = unique(data.elev);
elev_N = size(elev);

for elev_i = 1:1:elev_N(1)
    TF = data.elev == elev(elev_i);
    meas(elev_i,:) = [elev(elev_i), data.NO2meas(TF)'];
    err(elev_i,:) = [elev(elev_i), data.err_NO2meas(TF)'];
    model(elev_i,:) = [elev(elev_i), data.NO2retr(TF)'];
end

%%% print the data %%%%
cd ../cindi2;
meas_name = ['U_Toronto_MAXDOAS_' data_source '_'  species '_CINDI2_' time_stamp '_' version '_meas_dSCD.asc'];
dlmwrite(meas_name,meas,'delimiter','\t','precision','%.8e');

err_name = ['U_Toronto_MAXDOAS_' data_source '_'  species '_CINDI2_' time_stamp '_' version '_meas_dSCD_err.asc'];
dlmwrite(err_name,err,'delimiter','\t','precision','%.8e');

model_name = ['U_Toronto_MAXDOAS_' data_source '_'  species '_CINDI2_' time_stamp '_' version '_model_dSCD.asc'];
dlmwrite(model_name,model,'delimiter','\t','precision','%.8e');



figure;hold all;
try
gscatter(data.time,data.NO2meas,data.elev,'','ssssssssss');
end

try
gscatter(data.time,data.NO2retr,data.elev,'','xxxxxxxxxx');
end

datetick('x','HH:MM','keeplimits');
time = data.time;
min_x = datenum(min(time));
max_x = datenum(max(time));
xlim([min_x-0.01 max_x+0.01]);
ylabel('NO_2 SCD [molec/cm^2]');
ylim([0 2.5e17]);
xlabel(['Time UTC (HH:MM)']);
title(DATE_lable);
textbp(['Square: Measurement ; X: Model']);
print_setting(1,save_fig,['NO2_SCD_' file_nm(1,6:13) '_CINDI2']);


function meas20160914 = importfile(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   MEAS20160914 = IMPORTFILE(FILENAME) Reads data from text file FILENAME
%   for the default selection.
%
%   MEAS20160914 = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from
%   rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   meas20160914 = importfile('meas_20160914.dat', 2, 131);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2016/09/19 16:07:32

%% Initialize variables.
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: datetimes (%{dd/MM/yyyy}D)
%	column2: datetimes (%{HH:mm:ss}D)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%10{dd/MM/yyyy}D%9{HH:mm:ss}D%14f%14f%14f%14f%14f%14f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', '', 'WhiteSpace', '', 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', '', 'WhiteSpace', '', 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
meas20160914 = table(dataArray{1:end-1}, 'VariableNames', {'date','time','SZA','elev','rel_azim','wl','NO2meas','err_NO2meas','NO2retr'});

% For code requiring serial dates (datenum) instead of datetime, uncomment
% the following line(s) below to return the imported dates as datenum(s).

% meas20160914.date=datenum(meas20160914.date);
% meas20160914.time=datenum(meas20160914.time);

